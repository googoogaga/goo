(use goo/boot)
(use goo/macros)
(use goo/math)
(use goo/cols/col)
(use goo/cols/seq)
;; 3.7.7 STEP (really should be "Impulse" or something..)

;;;;!! Interface
(exported
 (dc <step> (<seq>))
 (dg first-then (first|<fun> then|<fun>))
)

;;;;!! Implementation

(dp step-first (x|<step> => <fun>))
(dp step-then (x|<step> => <fun>))

;;;; Collection iteration protocol
(dm first-then (first|<fun> then|<fun> => <step>)
  (new <step> step-first first step-then then))

(dc <step-enum> (<enum>))
(dp %dat (x|<step-enum> => <step>))
(dp %first? (x|<step-enum> => <log>) #t)
(dm enum (x|<step> => <step-enum>) 
  (new <step-enum> %dat x))
(dm fin? (e|<step-enum> => <log>)
  #f)
(dm nxt (e|<step-enum> => <step-enum>)
  (renew e %first? #f ;; %dat (%dat e)
         ))
(dm now (e|<step-enum> => <any>)
  (if (%first? e) ((step-first (%dat e))) ((step-then (%dat e)))))
