(use boot)
(use macros)
(use proto/math)
(use proto/types)
(use proto/collections/collection)
(use proto/collections/sequence)
(use proto/collections/list)

;; 3.7.2 MAPS

;;;;!! Interface
(exported
 (dc <map> (<col>))
;; undocumented
 (dg fab-map ((p (t< <map>)) (key-vals ...)))
)

;;;;!! Implementation

;;;; Undocumented
(dm fab-map ((p (t< <map>)) (key-vals ...))
  (let ((x (fab p (1st (truncate/ (len key-vals) 2)))))
    (do-key-vals (fun (key val) (set (elt x key) val)) key-vals)
    x))

