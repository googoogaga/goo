;;;; Copyright 2002, Jonathan Bachrach.  See file TERMS.

(use goo)
(use goo/eval)
(use goo/system)
(use eval/ast)
(use eval/top)
(use eval/g2c)
;; (use tests)
;; (use eval/decision-trees)
;; (use tests)
;; (use beatbox)
;; (use eval/g2m)
;; (use eval/typist)
;; (use eval/optimize)
;; (use eval/ast-print)

;; Make sure the goo/user module gets compiled into our image.
(use goo/user)

(dv *goo-version* "0.131")
(dv *goo-date*    "APR 11, 2002")

(msg out ";;; GOO\n")
(msg out ";;; JONATHAN BACHRACH\n")
(msg out ";;; MIT AI Lab\n")
(msg out ";;; %s\n" *goo-date*)
(msg out ";;; \n")
(msg out ";;; VERSION = %s\n" *goo-version*)
(msg out ";;; ROOT    = %s\n" *goo-root*)
;; (msg out ";;; Loading Runtime Bindings...\n")
(init-ast)
;; (msg out ";;; Loading System Patches...\n")
(let ((file (find-goo-file-at "init" *goo-root*)))
  (and file (load-file file 'goo/user)))
;; (msg out ";;; Loading User Patches...\n")
(let ((file (find-goo-file-at "init" *goo-personal-root*)))
  (and file (load-file file 'goo/user)))
;; (msg out ";;; \n")
(top 'goo/user)
