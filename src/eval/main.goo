;;;; Copyright 2002, Jonathan Bachrach.  See file TERMS.

(use goo)
(use goo/eval)
(use goo/system)
(use eval/ast)
(use eval/top)
(use eval/g2c)

;; (use eval/g2m)
;; (use eval/vm)

(use time/threads)
(use time/lock)
(use time/event)
(use cols/pipe)
(use goo/random)

;; (use samurui/samurui)

;; (use eval/decision-trees)
;; (use tests)
;; (use tests)
;; (use beatbox)
;; (use eval/g2m)
;; (use eval/typist)
;; (use eval/optimize)
;; (use eval/ast-print)

;; Make sure the goo/user module gets compiled into our image.
(use goo/user)

(dv *goo-version* "0.148")
(dv *goo-date*    "SEP 06, 2002")

(post ";;; GOO\n")
(post ";;; JONATHAN BACHRACH\n")
(post ";;; MIT AI Lab\n")
(post ";;; %s\n" *goo-date*)
(post ";;; \n")
(post ";;; VERSION = %s\n" *goo-version*)
(post ";;; ROOT    = %s\n" *goo-root*)
;; (post ";;; Loading Runtime Bindings...\n")
(init-ast)
;; (post ";;; Loading System Patches...\n")
(let ((file (find-goo-file-at "init" *goo-root*)))
  (and file (load-file file 'goo/user)))
;; (post ";;; Loading User Patches...\n")
(let ((file (find-goo-file-at "init" *goo-personal-root*)))
  (and file (load-file file 'goo/user)))
;; (post ";;; \n")
(top 'goo/user)
