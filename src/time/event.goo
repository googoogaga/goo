(use goo)
(use goo/boot)
(use goo/threads)

(dl %event-create)
(dl %event-signal)
(dl %event-pulse)
(dl %event-reset)
(dl %event-kill)
(dl %event-wait)

(dc <event> (<any>))
  (dp event-name (x|<event> => (t? <sym>)) #f)
  (dp vent-handle (x|<event> =>)

(df fab-event (name|<sym>)
  (def event (new <event> event-name name))
  (set (event-handle event) (%lb (%event-create (%su (as <str> name)))))
  event)

(dm event-signal (e|<event>)
  (%event-signal (%lu (event-handle e))))

(dm event-kill (e|<event>)
  (%event-kill (%lu (event-handle e))))

(dm event-reset (e|<event>)
  (%event-reset (%lu (event-handle e))))

(dm wait (e|<event> n|<int> => <log>)
  (%bb (%event-wait (%lu (event-handle e)) (%iu n))))

(export
  <event>
  event-name
  event-handle
  fab-event
  event-signal
  event-kill
  event-reset
  wait)
  
