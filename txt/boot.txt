HYBRID INITIAL BOOT

x %%field-value, %%field-value-setter
x %%clone(name, init, ...)
x %%isa(name, superclass)
x %%fld(owner, field-name, type, init, offset)
x %%build-booted-accessors()
x EXPORT LITERALS IN EVAL
x EXPORTING METHODS
x PRINT METHODS FOR OBJECTS
o BOOT NIL TO HAVE HEAD AND TAIL

1. WRITE BASE INTERPRETER
2. GET BASIC RUNTIME RUNNING AND TESTED
3. GET INTERPRETER RUNNING IN ITSELF
4. WRITE P->C|D COMPILER
5. COMPILE RUNTIME AND TEST
6. COMPILE INTERPRETER AND TEST
7. REWRITE AS P->C|P COMPILER 
8. COMPILER P->C|P AND TEST 

1. WRITE BASE INTERPRETER
2. WRITE TEST-SUITE IN DYLAN
3. GET BASIC RUNTIME RUNNING AND TESTED
4. GET TEST SUITE REWRITTEN IN PROTO
5. REWRITE ALL BUT PRIMITIVES IN PROTO 
   ENVIRONMENT
   SYNTAX
   ASCII
   READ
   WRITE
   TOP
   AST
   AST-EVAL
   ---
   AST-PRINT
   AST-LINEARIZE
   P2C

COMPILER PLAN

1. IDENTIFY ALL FUNCTIONS AND SPECIALIZERS 
2. STORE DEFS IN BINDINGS
3. BUILD DISPATCHERS FOR ALL GENERICS USING ISA? DEC TREE
4. DUMP ALL FUNCTIONS
5. PREBUILD 
