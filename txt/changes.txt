0.40 Keith RELEASE 1

0.50 Keith RELEASE 2

0.60 6.894 RELEASE 1

0.61 6.894 RELEASE 2

fixed gen-add-met problem whereby methods might not be properly
replaced

added initialization string
added file-opening-error

0.62 6.894 RELEASE 3

added 

  os-name
  os-binding-value os-binding-value-setter
  *proto-root*
  src-filename
  *path-separator*
  *proto-version*
  *proto-date*

fixed file-opening-error

require that users now setenv PROTO_ROOT which in my case would be:

  \jrb\ai\proto\

must be slash terminated.

0.63 6.894 RELEASE 4

fixed AND and OR macros and native pattern matching mechanism.

0.64 6.894 RELEASE 5

fixes

  1.  nul/nul-slot  confusion  which  would  manifest  itself  in very
  strange ways such as ((fun (x) x) nul) returning the empty list.

  2. () typed into proto's toplevel crashes proto

  3.   printing   prototypes   can   crash   proto,   in   particular,
  (object-parents <lst>) at toplevel


0.65 6.894 RELEASE 6

fixes:

  singleton specializer problem: whereby methods dispatching on
  singletons would infinitely loop if they returned false

  incomplete printing of errors in top-level: where
  <simple-condition>'s weren't being formatted

adds:

  keyboard interrupt handling: which means that C-C will stop your
  program and put you in a next level of the listener

0.66 6.894 RELEASE 7

fixes:

  fixed singleton dispatch cache problem

  fixed DG to create working generics

adds:

  fab-gen (used in assignment 3)

0.70 6.894 RELEASE 8

fixes: 

  try broken 

    0<= (try ((x r) 1000) 3)
    ERROR: Unbound binding: %with-monitor

  <flo>'s don't print out with their decimal points.

  reduce+ calls nxt-state with wrong arguments.

  If an error occurs during the ,then clause of a 'MIF special form,
  the error never gets reported and the ,else clause gets executed.

  Calling functions doesn't do parameter type checking ... and 
  (apply + 2) causes segfault.

  printing <num> causes segfault.

  running proto without the proper PROTO_ROOT set segfaults if you
  aren't in the right dir. it now figures out where to look based on
  the location of the exe (see app-filename), not based on the working
  dir.

  ^C in Linux Proto only works the first time you type it.  The first
  time it works great, but if you try to use it again, it doesn't do
  anything.  

  0<= (macro-expand (when 1 2))
  ERROR: TYPE ERROR (when 1 2) SHOULD BE A <fun>

  changed named objects to print without "$" prefix

adds:

  Generic  all2? ((test <fun>) (x <col>) (y <col>) => <log>)

    two collection version of all?

  Generic  any2? ((test <fun>) (x <col>) (y <col>) => <log>)

    two collection version of any?

  Method   add-slot (owner (getter <gen>) (setter <gen>) type (init <fun>))

    where init is a one parameter function that returns the initial
    value for the slot and gets called lazily with the new instance as
    the argument.

  Method   app-filename (=> <str>)

    returns filename of proto exe.

  Method   app-args (=> <lst>)

    returns list of argument strings passed to proto.

changes:

  faster interpreter environments with integer offsets.

  tagged <int>'s <chr>'s and <loc>'s

0.71 6.894 RELEASE 9

fixes: 

  redefining a runtime binding

0.72 6.894 RELEASE 10

fixes: 

  (re)defining method on a runtime defined generic

adds:

  Method object-traits (x => <traits>)

    returns the traits object of a given argument

0.80 6.894 RELEASE 12

summary:

exposes all bindings and takes longer to startup.  
ast-linearize and p2c mostly working although p2c not quite bootstrapped.

fixes:

  do(<fun>, <tab>) now calls function with only table values
  iteration protocol on <tab>

adds:

ast enhancements for code generation and typing

  (slot <program> (program-register <int>))
  (slot <program> program-type)

stretchy-vectors (although i'll probably change their names to <buf>)

  <svec> 

  do-keyed(<fun>, <tab>) 

for loops

  (for ((,name ,value) ...) ,@body)

ranges -- like dylan's range's and from for clause

  <range> from from-to from-below from-above and "-by" versions

  (for ((i (from 0))) ...) 
  (for ((i (from-below 0 10))) ...) 

steps -- like dylan's first/then for clause

  <step> first-then

  (for ((first? (first-then #t #f))) ...) 

0.81 6.894 RELEASE 13

summary:

closer to bootstrapping.  adds ffi support.

fixes:

  various piddly ast-linearize bugs.

adds:

ffi support

  %fapply primitive to proto.h
  fapply (fproc (args <opts>)) function to boot.proto


0.82 6.894 RELEASE 14

summary:

  p2c bootstrapped.  p2c can now compile itself and produce a compilable
  C file.  i have not thoroughly tested this, but i've fixed a bunch
  of bugs and the code in ast-linearize and p2c is now working well.  

fixes:

  clr! ((x <tab>) fill)
 
  eof-object? to be restricted to <chr>'s and otherwise return false.

adds:

  multiple values binding tup to let

  loads "../SRC/patches.proto" now which you can hack

0.83 6.894 RELEASE 15

summary:

fixes:

  svec -> buf

adds:

  tail call analysis in ast
